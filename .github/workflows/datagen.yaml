# Authors: Halcyon Brown & John Cambefort
# This workflow file generates the geoJson data files by running the various 
# python data fetching and network analysis scripts.
# It then pushes the files to the "data" directory in the project website repository.
# It is triggered weekly at midnight on Sundays and when there are new pushes to the repositories.

name: generate-geojson-files
on:
  push:
  schedule:
    - cron: '0 0 * * 0' # trigger at midnight on Sunday (weekly)

jobs:
  generate-files:
    name: Generate GeoJson Files
    runs-on: ubuntu-latest

    defaults: # conda needs this
        run:
          shell: bash -l {0}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Conda Python 3.9
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: ox
        python-version: 3.9.2

    - name: Install OSMNX
      run: |
        conda clean -i
        conda install -c conda-forge osmnx 

    - name: Install other python packages
      run: |
        pip install tqdm
        pip install alphashape

    - name: Fix issues with Fiona & GDAL # https://stackoverflow.com/questions/69521550/importerror-the-read-file-function-requires-the-fiona-package-but-it-is-no
      run: |
        pip uninstall --yes gdal fiona
        pip install gdal fiona 

    - name: Fetch API data, filter & convert to geoJson
      run:
        python produce_geojson.py

    - name: Convert department_types.csv to json
      run: 
        python dept_type_to_json.py

    - name: Match departments from produce_geojson.py and dept_type_to_json.py
      run:
        python match_departments.py

    - name: Determine the hydrant types and flow rates
      run:
        python hydrants_coords_by_type.py

    - name: Generate VT State polygons
      run: |
        python network_analysis.py

    - name: Generate ESN polygons
      run: |
        python analysis_by_esn.py

    - name: Generate hydrant geometries
      run: |
        python hydrant_analysis.py

    - name: Push 'data' dir with new files to Web repository
      id: push_directory
      uses: dmnemec/copy_file_to_another_repo_action@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source_file: 'data'
        destination_repo: 'This-blank-Is-On-Fire/Website'
        user_email: 'jcambefort@middlebury.edu'
        user_name: 'johncambefort'
        destination_branch: 'master'
